#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataObjects.Linq2SQL.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DCMS")]
	public partial class DCMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAPPOINTMENT(APPOINTMENT instance);
    partial void UpdateAPPOINTMENT(APPOINTMENT instance);
    partial void DeleteAPPOINTMENT(APPOINTMENT instance);
    partial void InsertDOCTOR(DOCTOR instance);
    partial void UpdateDOCTOR(DOCTOR instance);
    partial void DeleteDOCTOR(DOCTOR instance);
    partial void InsertDOCTOR_FACULITY(DOCTOR_FACULITY instance);
    partial void UpdateDOCTOR_FACULITY(DOCTOR_FACULITY instance);
    partial void DeleteDOCTOR_FACULITY(DOCTOR_FACULITY instance);
    partial void InsertFACULITY(FACULITY instance);
    partial void UpdateFACULITY(FACULITY instance);
    partial void DeleteFACULITY(FACULITY instance);
    partial void InsertLEAVE(LEAVE instance);
    partial void UpdateLEAVE(LEAVE instance);
    partial void DeleteLEAVE(LEAVE instance);
    partial void InsertLOCATION(LOCATION instance);
    partial void UpdateLOCATION(LOCATION instance);
    partial void DeleteLOCATION(LOCATION instance);
    partial void InsertORGANIZATION(ORGANIZATION instance);
    partial void UpdateORGANIZATION(ORGANIZATION instance);
    partial void DeleteORGANIZATION(ORGANIZATION instance);
    partial void InsertPATIENT(PATIENT instance);
    partial void UpdatePATIENT(PATIENT instance);
    partial void DeletePATIENT(PATIENT instance);
    partial void InsertSCHEDULE(SCHEDULE instance);
    partial void UpdateSCHEDULE(SCHEDULE instance);
    partial void DeleteSCHEDULE(SCHEDULE instance);
    #endregion
		
		public DCMSDataContext() : 
				base(global::DataObjects.Properties.Settings.Default.DCMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<APPOINTMENT> APPOINTMENTs
		{
			get
			{
				return this.GetTable<APPOINTMENT>();
			}
		}
		
		public System.Data.Linq.Table<DOCTOR> DOCTORs
		{
			get
			{
				return this.GetTable<DOCTOR>();
			}
		}
		
		public System.Data.Linq.Table<DOCTOR_FACULITY> DOCTOR_FACULITies
		{
			get
			{
				return this.GetTable<DOCTOR_FACULITY>();
			}
		}
		
		public System.Data.Linq.Table<FACULITY> FACULITies
		{
			get
			{
				return this.GetTable<FACULITY>();
			}
		}
		
		public System.Data.Linq.Table<LEAVE> LEAVEs
		{
			get
			{
				return this.GetTable<LEAVE>();
			}
		}
		
		public System.Data.Linq.Table<LOCATION> LOCATIONs
		{
			get
			{
				return this.GetTable<LOCATION>();
			}
		}
		
		public System.Data.Linq.Table<ORGANIZATION> ORGANIZATIONs
		{
			get
			{
				return this.GetTable<ORGANIZATION>();
			}
		}
		
		public System.Data.Linq.Table<PATIENT> PATIENTs
		{
			get
			{
				return this.GetTable<PATIENT>();
			}
		}
		
		public System.Data.Linq.Table<SCHEDULE> SCHEDULEs
		{
			get
			{
				return this.GetTable<SCHEDULE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APPOINTMENT")]
	public partial class APPOINTMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LOCATION_ID;
		
		private int _APPOINTMENT_ID;
		
		private System.Nullable<int> _DOCTER_ID;
		
		private System.Nullable<int> _PATIENT_ID;
		
		private System.Nullable<System.TimeSpan> _TIME;
		
		private System.Nullable<System.DateTime> _DATE;
		
		private System.Nullable<decimal> _FEE;
		
		private string _PATIENT_HISTORY;
		
		private string _PRESCRIPTION;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
		private EntityRef<DOCTOR> _DOCTOR;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<PATIENT> _PATIENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLOCATION_IDChanging(System.Nullable<int> value);
    partial void OnLOCATION_IDChanged();
    partial void OnAPPOINTMENT_IDChanging(int value);
    partial void OnAPPOINTMENT_IDChanged();
    partial void OnDOCTER_IDChanging(System.Nullable<int> value);
    partial void OnDOCTER_IDChanged();
    partial void OnPATIENT_IDChanging(System.Nullable<int> value);
    partial void OnPATIENT_IDChanged();
    partial void OnTIMEChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTIMEChanged();
    partial void OnDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEChanged();
    partial void OnFEEChanging(System.Nullable<decimal> value);
    partial void OnFEEChanged();
    partial void OnPATIENT_HISTORYChanging(string value);
    partial void OnPATIENT_HISTORYChanged();
    partial void OnPRESCRIPTIONChanging(string value);
    partial void OnPRESCRIPTIONChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public APPOINTMENT()
		{
			this._DOCTOR = default(EntityRef<DOCTOR>);
			this._LOCATION = default(EntityRef<LOCATION>);
			this._PATIENT = default(EntityRef<PATIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int")]
		public System.Nullable<int> LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPOINTMENT_ID", DbType="Int NOT NULL")]
		public int APPOINTMENT_ID
		{
			get
			{
				return this._APPOINTMENT_ID;
			}
			set
			{
				if ((this._APPOINTMENT_ID != value))
				{
					this.OnAPPOINTMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._APPOINTMENT_ID = value;
					this.SendPropertyChanged("APPOINTMENT_ID");
					this.OnAPPOINTMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTER_ID", DbType="Int")]
		public System.Nullable<int> DOCTER_ID
		{
			get
			{
				return this._DOCTER_ID;
			}
			set
			{
				if ((this._DOCTER_ID != value))
				{
					if (this._DOCTOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDOCTER_IDChanging(value);
					this.SendPropertyChanging();
					this._DOCTER_ID = value;
					this.SendPropertyChanged("DOCTER_ID");
					this.OnDOCTER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PATIENT_ID", DbType="Int")]
		public System.Nullable<int> PATIENT_ID
		{
			get
			{
				return this._PATIENT_ID;
			}
			set
			{
				if ((this._PATIENT_ID != value))
				{
					if (this._PATIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPATIENT_IDChanging(value);
					this.SendPropertyChanging();
					this._PATIENT_ID = value;
					this.SendPropertyChanged("PATIENT_ID");
					this.OnPATIENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME", DbType="Time")]
		public System.Nullable<System.TimeSpan> TIME
		{
			get
			{
				return this._TIME;
			}
			set
			{
				if ((this._TIME != value))
				{
					this.OnTIMEChanging(value);
					this.SendPropertyChanging();
					this._TIME = value;
					this.SendPropertyChanged("TIME");
					this.OnTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FEE", DbType="Money")]
		public System.Nullable<decimal> FEE
		{
			get
			{
				return this._FEE;
			}
			set
			{
				if ((this._FEE != value))
				{
					this.OnFEEChanging(value);
					this.SendPropertyChanging();
					this._FEE = value;
					this.SendPropertyChanged("FEE");
					this.OnFEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PATIENT_HISTORY", DbType="NVarChar(MAX)")]
		public string PATIENT_HISTORY
		{
			get
			{
				return this._PATIENT_HISTORY;
			}
			set
			{
				if ((this._PATIENT_HISTORY != value))
				{
					this.OnPATIENT_HISTORYChanging(value);
					this.SendPropertyChanging();
					this._PATIENT_HISTORY = value;
					this.SendPropertyChanged("PATIENT_HISTORY");
					this.OnPATIENT_HISTORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRESCRIPTION", DbType="NVarChar(MAX)")]
		public string PRESCRIPTION
		{
			get
			{
				return this._PRESCRIPTION;
			}
			set
			{
				if ((this._PRESCRIPTION != value))
				{
					this.OnPRESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._PRESCRIPTION = value;
					this.SendPropertyChanged("PRESCRIPTION");
					this.OnPRESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTOR_APPOINTMENT", Storage="_DOCTOR", ThisKey="DOCTER_ID", OtherKey="ID", IsForeignKey=true)]
		public DOCTOR DOCTOR
		{
			get
			{
				return this._DOCTOR.Entity;
			}
			set
			{
				DOCTOR previousValue = this._DOCTOR.Entity;
				if (((previousValue != value) 
							|| (this._DOCTOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCTOR.Entity = null;
						previousValue.APPOINTMENTs.Remove(this);
					}
					this._DOCTOR.Entity = value;
					if ((value != null))
					{
						value.APPOINTMENTs.Add(this);
						this._DOCTER_ID = value.ID;
					}
					else
					{
						this._DOCTER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DOCTOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_APPOINTMENT", Storage="_LOCATION", ThisKey="LOCATION_ID", OtherKey="ID", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.APPOINTMENTs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.APPOINTMENTs.Add(this);
						this._LOCATION_ID = value.ID;
					}
					else
					{
						this._LOCATION_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PATIENT_APPOINTMENT", Storage="_PATIENT", ThisKey="PATIENT_ID", OtherKey="ID", IsForeignKey=true)]
		public PATIENT PATIENT
		{
			get
			{
				return this._PATIENT.Entity;
			}
			set
			{
				PATIENT previousValue = this._PATIENT.Entity;
				if (((previousValue != value) 
							|| (this._PATIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PATIENT.Entity = null;
						previousValue.APPOINTMENTs.Remove(this);
					}
					this._PATIENT.Entity = value;
					if ((value != null))
					{
						value.APPOINTMENTs.Add(this);
						this._PATIENT_ID = value.ID;
					}
					else
					{
						this._PATIENT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PATIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCTOR")]
	public partial class DOCTOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LOCATION_ID;
		
		private string _NAME;
		
		private string _FNAME;
		
		private System.Nullable<int> _AGE;
		
		private System.Nullable<System.DateTime> _JOINING_DATE;
		
		private string _CNIC;
		
		private string _QUALIFICATION;
		
		private string _DESIGNATION;
		
		private string _TELEPHONE_NUM;
		
		private string _CITY;
		
		private string _MOBILE_NUM;
		
		private string _ACTIVE;
		
		private string _REMARK;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
		private EntitySet<APPOINTMENT> _APPOINTMENTs;
		
		private EntitySet<LEAVE> _LEAVEs;
		
		private EntitySet<SCHEDULE> _SCHEDULEs;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLOCATION_IDChanging(System.Nullable<int> value);
    partial void OnLOCATION_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnFNAMEChanging(string value);
    partial void OnFNAMEChanged();
    partial void OnAGEChanging(System.Nullable<int> value);
    partial void OnAGEChanged();
    partial void OnJOINING_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnJOINING_DATEChanged();
    partial void OnCNICChanging(string value);
    partial void OnCNICChanged();
    partial void OnQUALIFICATIONChanging(string value);
    partial void OnQUALIFICATIONChanged();
    partial void OnDESIGNATIONChanging(string value);
    partial void OnDESIGNATIONChanged();
    partial void OnTELEPHONE_NUMChanging(string value);
    partial void OnTELEPHONE_NUMChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnMOBILE_NUMChanging(string value);
    partial void OnMOBILE_NUMChanged();
    partial void OnACTIVEChanging(string value);
    partial void OnACTIVEChanged();
    partial void OnREMARKChanging(string value);
    partial void OnREMARKChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public DOCTOR()
		{
			this._APPOINTMENTs = new EntitySet<APPOINTMENT>(new Action<APPOINTMENT>(this.attach_APPOINTMENTs), new Action<APPOINTMENT>(this.detach_APPOINTMENTs));
			this._LEAVEs = new EntitySet<LEAVE>(new Action<LEAVE>(this.attach_LEAVEs), new Action<LEAVE>(this.detach_LEAVEs));
			this._SCHEDULEs = new EntitySet<SCHEDULE>(new Action<SCHEDULE>(this.attach_SCHEDULEs), new Action<SCHEDULE>(this.detach_SCHEDULEs));
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int")]
		public System.Nullable<int> LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FNAME", DbType="VarChar(50)")]
		public string FNAME
		{
			get
			{
				return this._FNAME;
			}
			set
			{
				if ((this._FNAME != value))
				{
					this.OnFNAMEChanging(value);
					this.SendPropertyChanging();
					this._FNAME = value;
					this.SendPropertyChanged("FNAME");
					this.OnFNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AGE", DbType="Int")]
		public System.Nullable<int> AGE
		{
			get
			{
				return this._AGE;
			}
			set
			{
				if ((this._AGE != value))
				{
					this.OnAGEChanging(value);
					this.SendPropertyChanging();
					this._AGE = value;
					this.SendPropertyChanged("AGE");
					this.OnAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOINING_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> JOINING_DATE
		{
			get
			{
				return this._JOINING_DATE;
			}
			set
			{
				if ((this._JOINING_DATE != value))
				{
					this.OnJOINING_DATEChanging(value);
					this.SendPropertyChanging();
					this._JOINING_DATE = value;
					this.SendPropertyChanged("JOINING_DATE");
					this.OnJOINING_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNIC", DbType="NVarChar(50)")]
		public string CNIC
		{
			get
			{
				return this._CNIC;
			}
			set
			{
				if ((this._CNIC != value))
				{
					this.OnCNICChanging(value);
					this.SendPropertyChanging();
					this._CNIC = value;
					this.SendPropertyChanged("CNIC");
					this.OnCNICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATION", DbType="NVarChar(100)")]
		public string QUALIFICATION
		{
			get
			{
				return this._QUALIFICATION;
			}
			set
			{
				if ((this._QUALIFICATION != value))
				{
					this.OnQUALIFICATIONChanging(value);
					this.SendPropertyChanging();
					this._QUALIFICATION = value;
					this.SendPropertyChanged("QUALIFICATION");
					this.OnQUALIFICATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESIGNATION", DbType="NVarChar(50)")]
		public string DESIGNATION
		{
			get
			{
				return this._DESIGNATION;
			}
			set
			{
				if ((this._DESIGNATION != value))
				{
					this.OnDESIGNATIONChanging(value);
					this.SendPropertyChanging();
					this._DESIGNATION = value;
					this.SendPropertyChanged("DESIGNATION");
					this.OnDESIGNATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEPHONE_NUM", DbType="VarChar(50)")]
		public string TELEPHONE_NUM
		{
			get
			{
				return this._TELEPHONE_NUM;
			}
			set
			{
				if ((this._TELEPHONE_NUM != value))
				{
					this.OnTELEPHONE_NUMChanging(value);
					this.SendPropertyChanging();
					this._TELEPHONE_NUM = value;
					this.SendPropertyChanged("TELEPHONE_NUM");
					this.OnTELEPHONE_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(50)")]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOBILE_NUM", DbType="VarChar(50)")]
		public string MOBILE_NUM
		{
			get
			{
				return this._MOBILE_NUM;
			}
			set
			{
				if ((this._MOBILE_NUM != value))
				{
					this.OnMOBILE_NUMChanging(value);
					this.SendPropertyChanging();
					this._MOBILE_NUM = value;
					this.SendPropertyChanged("MOBILE_NUM");
					this.OnMOBILE_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="VarChar(1)")]
		public string ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMARK", DbType="NVarChar(MAX)")]
		public string REMARK
		{
			get
			{
				return this._REMARK;
			}
			set
			{
				if ((this._REMARK != value))
				{
					this.OnREMARKChanging(value);
					this.SendPropertyChanging();
					this._REMARK = value;
					this.SendPropertyChanged("REMARK");
					this.OnREMARKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTOR_APPOINTMENT", Storage="_APPOINTMENTs", ThisKey="ID", OtherKey="DOCTER_ID")]
		public EntitySet<APPOINTMENT> APPOINTMENTs
		{
			get
			{
				return this._APPOINTMENTs;
			}
			set
			{
				this._APPOINTMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTOR_LEAVE", Storage="_LEAVEs", ThisKey="ID", OtherKey="DOCTOR_ID")]
		public EntitySet<LEAVE> LEAVEs
		{
			get
			{
				return this._LEAVEs;
			}
			set
			{
				this._LEAVEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTOR_SCHEDULE", Storage="_SCHEDULEs", ThisKey="ID", OtherKey="DOCTOR_ID")]
		public EntitySet<SCHEDULE> SCHEDULEs
		{
			get
			{
				return this._SCHEDULEs;
			}
			set
			{
				this._SCHEDULEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_DOCTOR", Storage="_LOCATION", ThisKey="LOCATION_ID", OtherKey="ID", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.DOCTORs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.DOCTORs.Add(this);
						this._LOCATION_ID = value.ID;
					}
					else
					{
						this._LOCATION_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_APPOINTMENTs(APPOINTMENT entity)
		{
			this.SendPropertyChanging();
			entity.DOCTOR = this;
		}
		
		private void detach_APPOINTMENTs(APPOINTMENT entity)
		{
			this.SendPropertyChanging();
			entity.DOCTOR = null;
		}
		
		private void attach_LEAVEs(LEAVE entity)
		{
			this.SendPropertyChanging();
			entity.DOCTOR = this;
		}
		
		private void detach_LEAVEs(LEAVE entity)
		{
			this.SendPropertyChanging();
			entity.DOCTOR = null;
		}
		
		private void attach_SCHEDULEs(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.DOCTOR = this;
		}
		
		private void detach_SCHEDULEs(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.DOCTOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCTOR_FACULITY")]
	public partial class DOCTOR_FACULITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LOCATION_ID;
		
		private System.Nullable<int> _DOCTOR_ID;
		
		private System.Nullable<int> _FACULITY_ID;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLOCATION_IDChanging(System.Nullable<int> value);
    partial void OnLOCATION_IDChanged();
    partial void OnDOCTOR_IDChanging(System.Nullable<int> value);
    partial void OnDOCTOR_IDChanged();
    partial void OnFACULITY_IDChanging(System.Nullable<int> value);
    partial void OnFACULITY_IDChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public DOCTOR_FACULITY()
		{
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int")]
		public System.Nullable<int> LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTOR_ID", DbType="Int")]
		public System.Nullable<int> DOCTOR_ID
		{
			get
			{
				return this._DOCTOR_ID;
			}
			set
			{
				if ((this._DOCTOR_ID != value))
				{
					this.OnDOCTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._DOCTOR_ID = value;
					this.SendPropertyChanged("DOCTOR_ID");
					this.OnDOCTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACULITY_ID", DbType="Int")]
		public System.Nullable<int> FACULITY_ID
		{
			get
			{
				return this._FACULITY_ID;
			}
			set
			{
				if ((this._FACULITY_ID != value))
				{
					this.OnFACULITY_IDChanging(value);
					this.SendPropertyChanging();
					this._FACULITY_ID = value;
					this.SendPropertyChanged("FACULITY_ID");
					this.OnFACULITY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_DOCTOR_FACULITY", Storage="_LOCATION", ThisKey="LOCATION_ID", OtherKey="ID", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.DOCTOR_FACULITies.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.DOCTOR_FACULITies.Add(this);
						this._LOCATION_ID = value.ID;
					}
					else
					{
						this._LOCATION_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACULITY")]
	public partial class FACULITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _STATUS;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnSTATUSChanging(string value);
    partial void OnSTATUSChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public FACULITY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS", DbType="NVarChar(1)")]
		public string STATUS
		{
			get
			{
				return this._STATUS;
			}
			set
			{
				if ((this._STATUS != value))
				{
					this.OnSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATUS = value;
					this.SendPropertyChanged("STATUS");
					this.OnSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LEAVE")]
	public partial class LEAVE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LOCATION_ID;
		
		private System.Nullable<int> _DOCTOR_ID;
		
		private System.Nullable<System.DateTime> _LEAVE_FROM;
		
		private System.Nullable<System.DateTime> _LEAVE_TO;
		
		private string _ACTIVE;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
		private EntityRef<DOCTOR> _DOCTOR;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLOCATION_IDChanging(System.Nullable<int> value);
    partial void OnLOCATION_IDChanged();
    partial void OnDOCTOR_IDChanging(System.Nullable<int> value);
    partial void OnDOCTOR_IDChanged();
    partial void OnLEAVE_FROMChanging(System.Nullable<System.DateTime> value);
    partial void OnLEAVE_FROMChanged();
    partial void OnLEAVE_TOChanging(System.Nullable<System.DateTime> value);
    partial void OnLEAVE_TOChanged();
    partial void OnACTIVEChanging(string value);
    partial void OnACTIVEChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public LEAVE()
		{
			this._DOCTOR = default(EntityRef<DOCTOR>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int")]
		public System.Nullable<int> LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTOR_ID", DbType="Int")]
		public System.Nullable<int> DOCTOR_ID
		{
			get
			{
				return this._DOCTOR_ID;
			}
			set
			{
				if ((this._DOCTOR_ID != value))
				{
					if (this._DOCTOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDOCTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._DOCTOR_ID = value;
					this.SendPropertyChanged("DOCTOR_ID");
					this.OnDOCTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEAVE_FROM", DbType="Date")]
		public System.Nullable<System.DateTime> LEAVE_FROM
		{
			get
			{
				return this._LEAVE_FROM;
			}
			set
			{
				if ((this._LEAVE_FROM != value))
				{
					this.OnLEAVE_FROMChanging(value);
					this.SendPropertyChanging();
					this._LEAVE_FROM = value;
					this.SendPropertyChanged("LEAVE_FROM");
					this.OnLEAVE_FROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEAVE_TO", DbType="Date")]
		public System.Nullable<System.DateTime> LEAVE_TO
		{
			get
			{
				return this._LEAVE_TO;
			}
			set
			{
				if ((this._LEAVE_TO != value))
				{
					this.OnLEAVE_TOChanging(value);
					this.SendPropertyChanging();
					this._LEAVE_TO = value;
					this.SendPropertyChanged("LEAVE_TO");
					this.OnLEAVE_TOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="VarChar(1)")]
		public string ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTOR_LEAVE", Storage="_DOCTOR", ThisKey="DOCTOR_ID", OtherKey="ID", IsForeignKey=true)]
		public DOCTOR DOCTOR
		{
			get
			{
				return this._DOCTOR.Entity;
			}
			set
			{
				DOCTOR previousValue = this._DOCTOR.Entity;
				if (((previousValue != value) 
							|| (this._DOCTOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCTOR.Entity = null;
						previousValue.LEAVEs.Remove(this);
					}
					this._DOCTOR.Entity = value;
					if ((value != null))
					{
						value.LEAVEs.Add(this);
						this._DOCTOR_ID = value.ID;
					}
					else
					{
						this._DOCTOR_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DOCTOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_LEAVE", Storage="_LOCATION", ThisKey="LOCATION_ID", OtherKey="ID", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.LEAVEs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.LEAVEs.Add(this);
						this._LOCATION_ID = value.ID;
					}
					else
					{
						this._LOCATION_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOCATION")]
	public partial class LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _ADDRESS;
		
		private string _CONTACT_1;
		
		private string _CONTACT_2;
		
		private string _CONTACT_3;
		
		private string _FAX_NO;
		
		private string _CITY;
		
		private string _EMAIL;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
		private EntitySet<APPOINTMENT> _APPOINTMENTs;
		
		private EntitySet<DOCTOR> _DOCTORs;
		
		private EntitySet<DOCTOR_FACULITY> _DOCTOR_FACULITies;
		
		private EntitySet<LEAVE> _LEAVEs;
		
		private EntitySet<PATIENT> _PATIENTs;
		
		private EntitySet<SCHEDULE> _SCHEDULEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnCONTACT_1Changing(string value);
    partial void OnCONTACT_1Changed();
    partial void OnCONTACT_2Changing(string value);
    partial void OnCONTACT_2Changed();
    partial void OnCONTACT_3Changing(string value);
    partial void OnCONTACT_3Changed();
    partial void OnFAX_NOChanging(string value);
    partial void OnFAX_NOChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public LOCATION()
		{
			this._APPOINTMENTs = new EntitySet<APPOINTMENT>(new Action<APPOINTMENT>(this.attach_APPOINTMENTs), new Action<APPOINTMENT>(this.detach_APPOINTMENTs));
			this._DOCTORs = new EntitySet<DOCTOR>(new Action<DOCTOR>(this.attach_DOCTORs), new Action<DOCTOR>(this.detach_DOCTORs));
			this._DOCTOR_FACULITies = new EntitySet<DOCTOR_FACULITY>(new Action<DOCTOR_FACULITY>(this.attach_DOCTOR_FACULITies), new Action<DOCTOR_FACULITY>(this.detach_DOCTOR_FACULITies));
			this._LEAVEs = new EntitySet<LEAVE>(new Action<LEAVE>(this.attach_LEAVEs), new Action<LEAVE>(this.detach_LEAVEs));
			this._PATIENTs = new EntitySet<PATIENT>(new Action<PATIENT>(this.attach_PATIENTs), new Action<PATIENT>(this.detach_PATIENTs));
			this._SCHEDULEs = new EntitySet<SCHEDULE>(new Action<SCHEDULE>(this.attach_SCHEDULEs), new Action<SCHEDULE>(this.detach_SCHEDULEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(250)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_1", DbType="VarChar(50)")]
		public string CONTACT_1
		{
			get
			{
				return this._CONTACT_1;
			}
			set
			{
				if ((this._CONTACT_1 != value))
				{
					this.OnCONTACT_1Changing(value);
					this.SendPropertyChanging();
					this._CONTACT_1 = value;
					this.SendPropertyChanged("CONTACT_1");
					this.OnCONTACT_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_2", DbType="VarChar(50)")]
		public string CONTACT_2
		{
			get
			{
				return this._CONTACT_2;
			}
			set
			{
				if ((this._CONTACT_2 != value))
				{
					this.OnCONTACT_2Changing(value);
					this.SendPropertyChanging();
					this._CONTACT_2 = value;
					this.SendPropertyChanged("CONTACT_2");
					this.OnCONTACT_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_3", DbType="VarChar(50)")]
		public string CONTACT_3
		{
			get
			{
				return this._CONTACT_3;
			}
			set
			{
				if ((this._CONTACT_3 != value))
				{
					this.OnCONTACT_3Changing(value);
					this.SendPropertyChanging();
					this._CONTACT_3 = value;
					this.SendPropertyChanged("CONTACT_3");
					this.OnCONTACT_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAX_NO", DbType="VarChar(50)")]
		public string FAX_NO
		{
			get
			{
				return this._FAX_NO;
			}
			set
			{
				if ((this._FAX_NO != value))
				{
					this.OnFAX_NOChanging(value);
					this.SendPropertyChanging();
					this._FAX_NO = value;
					this.SendPropertyChanged("FAX_NO");
					this.OnFAX_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(50)")]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_APPOINTMENT", Storage="_APPOINTMENTs", ThisKey="ID", OtherKey="LOCATION_ID")]
		public EntitySet<APPOINTMENT> APPOINTMENTs
		{
			get
			{
				return this._APPOINTMENTs;
			}
			set
			{
				this._APPOINTMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_DOCTOR", Storage="_DOCTORs", ThisKey="ID", OtherKey="LOCATION_ID")]
		public EntitySet<DOCTOR> DOCTORs
		{
			get
			{
				return this._DOCTORs;
			}
			set
			{
				this._DOCTORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_DOCTOR_FACULITY", Storage="_DOCTOR_FACULITies", ThisKey="ID", OtherKey="LOCATION_ID")]
		public EntitySet<DOCTOR_FACULITY> DOCTOR_FACULITies
		{
			get
			{
				return this._DOCTOR_FACULITies;
			}
			set
			{
				this._DOCTOR_FACULITies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_LEAVE", Storage="_LEAVEs", ThisKey="ID", OtherKey="LOCATION_ID")]
		public EntitySet<LEAVE> LEAVEs
		{
			get
			{
				return this._LEAVEs;
			}
			set
			{
				this._LEAVEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_PATIENT", Storage="_PATIENTs", ThisKey="ID", OtherKey="LOCATION_ID")]
		public EntitySet<PATIENT> PATIENTs
		{
			get
			{
				return this._PATIENTs;
			}
			set
			{
				this._PATIENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_SCHEDULE", Storage="_SCHEDULEs", ThisKey="ID", OtherKey="LOCATION_ID")]
		public EntitySet<SCHEDULE> SCHEDULEs
		{
			get
			{
				return this._SCHEDULEs;
			}
			set
			{
				this._SCHEDULEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_APPOINTMENTs(APPOINTMENT entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_APPOINTMENTs(APPOINTMENT entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_DOCTORs(DOCTOR entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_DOCTORs(DOCTOR entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_DOCTOR_FACULITies(DOCTOR_FACULITY entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_DOCTOR_FACULITies(DOCTOR_FACULITY entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_LEAVEs(LEAVE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_LEAVEs(LEAVE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_PATIENTs(PATIENT entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_PATIENTs(PATIENT entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_SCHEDULEs(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_SCHEDULEs(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORGANIZATION")]
	public partial class ORGANIZATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private string _ADDRESS;
		
		private string _CONTACT_1;
		
		private string _CONTACT_2;
		
		private string _CONTACT_3;
		
		private string _FAX_NO;
		
		private string _COUNTRY;
		
		private string _EMAIL;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnCONTACT_1Changing(string value);
    partial void OnCONTACT_1Changed();
    partial void OnCONTACT_2Changing(string value);
    partial void OnCONTACT_2Changed();
    partial void OnCONTACT_3Changing(string value);
    partial void OnCONTACT_3Changed();
    partial void OnFAX_NOChanging(string value);
    partial void OnFAX_NOChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public ORGANIZATION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(250)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_1", DbType="VarChar(50)")]
		public string CONTACT_1
		{
			get
			{
				return this._CONTACT_1;
			}
			set
			{
				if ((this._CONTACT_1 != value))
				{
					this.OnCONTACT_1Changing(value);
					this.SendPropertyChanging();
					this._CONTACT_1 = value;
					this.SendPropertyChanged("CONTACT_1");
					this.OnCONTACT_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_2", DbType="VarChar(50)")]
		public string CONTACT_2
		{
			get
			{
				return this._CONTACT_2;
			}
			set
			{
				if ((this._CONTACT_2 != value))
				{
					this.OnCONTACT_2Changing(value);
					this.SendPropertyChanging();
					this._CONTACT_2 = value;
					this.SendPropertyChanged("CONTACT_2");
					this.OnCONTACT_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_3", DbType="VarChar(50)")]
		public string CONTACT_3
		{
			get
			{
				return this._CONTACT_3;
			}
			set
			{
				if ((this._CONTACT_3 != value))
				{
					this.OnCONTACT_3Changing(value);
					this.SendPropertyChanging();
					this._CONTACT_3 = value;
					this.SendPropertyChanged("CONTACT_3");
					this.OnCONTACT_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAX_NO", DbType="VarChar(50)")]
		public string FAX_NO
		{
			get
			{
				return this._FAX_NO;
			}
			set
			{
				if ((this._FAX_NO != value))
				{
					this.OnFAX_NOChanging(value);
					this.SendPropertyChanging();
					this._FAX_NO = value;
					this.SendPropertyChanged("FAX_NO");
					this.OnFAX_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="VarChar(50)")]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PATIENT")]
	public partial class PATIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LOCATION_ID;
		
		private string _NAME;
		
		private string _FNAME;
		
		private string _ADDRESS;
		
		private System.Nullable<int> _AGE;
		
		private string _CNIC;
		
		private string _GENDER;
		
		private string _MOBILE_NUM;
		
		private string _CITY;
		
		private string _TELEPHONE_NUM;
		
		private string _REMARKS;
		
		private string _ACTIVE;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
		private EntitySet<APPOINTMENT> _APPOINTMENTs;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLOCATION_IDChanging(System.Nullable<int> value);
    partial void OnLOCATION_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnFNAMEChanging(string value);
    partial void OnFNAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnAGEChanging(System.Nullable<int> value);
    partial void OnAGEChanged();
    partial void OnCNICChanging(string value);
    partial void OnCNICChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnMOBILE_NUMChanging(string value);
    partial void OnMOBILE_NUMChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnTELEPHONE_NUMChanging(string value);
    partial void OnTELEPHONE_NUMChanged();
    partial void OnREMARKSChanging(string value);
    partial void OnREMARKSChanged();
    partial void OnACTIVEChanging(string value);
    partial void OnACTIVEChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public PATIENT()
		{
			this._APPOINTMENTs = new EntitySet<APPOINTMENT>(new Action<APPOINTMENT>(this.attach_APPOINTMENTs), new Action<APPOINTMENT>(this.detach_APPOINTMENTs));
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int")]
		public System.Nullable<int> LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FNAME", DbType="VarChar(50)")]
		public string FNAME
		{
			get
			{
				return this._FNAME;
			}
			set
			{
				if ((this._FNAME != value))
				{
					this.OnFNAMEChanging(value);
					this.SendPropertyChanging();
					this._FNAME = value;
					this.SendPropertyChanged("FNAME");
					this.OnFNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(MAX)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AGE", DbType="Int")]
		public System.Nullable<int> AGE
		{
			get
			{
				return this._AGE;
			}
			set
			{
				if ((this._AGE != value))
				{
					this.OnAGEChanging(value);
					this.SendPropertyChanging();
					this._AGE = value;
					this.SendPropertyChanged("AGE");
					this.OnAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNIC", DbType="NVarChar(50)")]
		public string CNIC
		{
			get
			{
				return this._CNIC;
			}
			set
			{
				if ((this._CNIC != value))
				{
					this.OnCNICChanging(value);
					this.SendPropertyChanging();
					this._CNIC = value;
					this.SendPropertyChanged("CNIC");
					this.OnCNICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(1)")]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOBILE_NUM", DbType="VarChar(50)")]
		public string MOBILE_NUM
		{
			get
			{
				return this._MOBILE_NUM;
			}
			set
			{
				if ((this._MOBILE_NUM != value))
				{
					this.OnMOBILE_NUMChanging(value);
					this.SendPropertyChanging();
					this._MOBILE_NUM = value;
					this.SendPropertyChanged("MOBILE_NUM");
					this.OnMOBILE_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(50)")]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEPHONE_NUM", DbType="VarChar(50)")]
		public string TELEPHONE_NUM
		{
			get
			{
				return this._TELEPHONE_NUM;
			}
			set
			{
				if ((this._TELEPHONE_NUM != value))
				{
					this.OnTELEPHONE_NUMChanging(value);
					this.SendPropertyChanging();
					this._TELEPHONE_NUM = value;
					this.SendPropertyChanged("TELEPHONE_NUM");
					this.OnTELEPHONE_NUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMARKS", DbType="NVarChar(MAX)")]
		public string REMARKS
		{
			get
			{
				return this._REMARKS;
			}
			set
			{
				if ((this._REMARKS != value))
				{
					this.OnREMARKSChanging(value);
					this.SendPropertyChanging();
					this._REMARKS = value;
					this.SendPropertyChanged("REMARKS");
					this.OnREMARKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="VarChar(1)")]
		public string ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PATIENT_APPOINTMENT", Storage="_APPOINTMENTs", ThisKey="ID", OtherKey="PATIENT_ID")]
		public EntitySet<APPOINTMENT> APPOINTMENTs
		{
			get
			{
				return this._APPOINTMENTs;
			}
			set
			{
				this._APPOINTMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_PATIENT", Storage="_LOCATION", ThisKey="LOCATION_ID", OtherKey="ID", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.PATIENTs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.PATIENTs.Add(this);
						this._LOCATION_ID = value.ID;
					}
					else
					{
						this._LOCATION_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_APPOINTMENTs(APPOINTMENT entity)
		{
			this.SendPropertyChanging();
			entity.PATIENT = this;
		}
		
		private void detach_APPOINTMENTs(APPOINTMENT entity)
		{
			this.SendPropertyChanging();
			entity.PATIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCHEDULE")]
	public partial class SCHEDULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LOCATION_ID;
		
		private System.Nullable<int> _DOCTOR_ID;
		
		private string _DAY;
		
		private System.Nullable<System.TimeSpan> _TIME_FROM;
		
		private System.Nullable<System.TimeSpan> _TIME_TO;
		
		private System.Nullable<System.DateTime> _CREATED_ON;
		
		private string _CREATED_USER;
		
		private System.Nullable<System.DateTime> _MODIFIED_ON;
		
		private string _MODIFIED_USER;
		
		private EntityRef<DOCTOR> _DOCTOR;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLOCATION_IDChanging(System.Nullable<int> value);
    partial void OnLOCATION_IDChanged();
    partial void OnDOCTOR_IDChanging(System.Nullable<int> value);
    partial void OnDOCTOR_IDChanged();
    partial void OnDAYChanging(string value);
    partial void OnDAYChanged();
    partial void OnTIME_FROMChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTIME_FROMChanged();
    partial void OnTIME_TOChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTIME_TOChanged();
    partial void OnCREATED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATED_ONChanged();
    partial void OnCREATED_USERChanging(string value);
    partial void OnCREATED_USERChanged();
    partial void OnMODIFIED_ONChanging(System.Nullable<System.DateTime> value);
    partial void OnMODIFIED_ONChanged();
    partial void OnMODIFIED_USERChanging(string value);
    partial void OnMODIFIED_USERChanged();
    #endregion
		
		public SCHEDULE()
		{
			this._DOCTOR = default(EntityRef<DOCTOR>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int")]
		public System.Nullable<int> LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTOR_ID", DbType="Int")]
		public System.Nullable<int> DOCTOR_ID
		{
			get
			{
				return this._DOCTOR_ID;
			}
			set
			{
				if ((this._DOCTOR_ID != value))
				{
					if (this._DOCTOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDOCTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._DOCTOR_ID = value;
					this.SendPropertyChanged("DOCTOR_ID");
					this.OnDOCTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAY", DbType="NVarChar(50)")]
		public string DAY
		{
			get
			{
				return this._DAY;
			}
			set
			{
				if ((this._DAY != value))
				{
					this.OnDAYChanging(value);
					this.SendPropertyChanging();
					this._DAY = value;
					this.SendPropertyChanged("DAY");
					this.OnDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME_FROM", DbType="Time")]
		public System.Nullable<System.TimeSpan> TIME_FROM
		{
			get
			{
				return this._TIME_FROM;
			}
			set
			{
				if ((this._TIME_FROM != value))
				{
					this.OnTIME_FROMChanging(value);
					this.SendPropertyChanging();
					this._TIME_FROM = value;
					this.SendPropertyChanged("TIME_FROM");
					this.OnTIME_FROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME_TO", DbType="Time")]
		public System.Nullable<System.TimeSpan> TIME_TO
		{
			get
			{
				return this._TIME_TO;
			}
			set
			{
				if ((this._TIME_TO != value))
				{
					this.OnTIME_TOChanging(value);
					this.SendPropertyChanging();
					this._TIME_TO = value;
					this.SendPropertyChanged("TIME_TO");
					this.OnTIME_TOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> CREATED_ON
		{
			get
			{
				return this._CREATED_ON;
			}
			set
			{
				if ((this._CREATED_ON != value))
				{
					this.OnCREATED_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATED_ON = value;
					this.SendPropertyChanged("CREATED_ON");
					this.OnCREATED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_USER", DbType="NVarChar(50)")]
		public string CREATED_USER
		{
			get
			{
				return this._CREATED_USER;
			}
			set
			{
				if ((this._CREATED_USER != value))
				{
					this.OnCREATED_USERChanging(value);
					this.SendPropertyChanging();
					this._CREATED_USER = value;
					this.SendPropertyChanged("CREATED_USER");
					this.OnCREATED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_ON", DbType="DateTime")]
		public System.Nullable<System.DateTime> MODIFIED_ON
		{
			get
			{
				return this._MODIFIED_ON;
			}
			set
			{
				if ((this._MODIFIED_ON != value))
				{
					this.OnMODIFIED_ONChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_ON = value;
					this.SendPropertyChanged("MODIFIED_ON");
					this.OnMODIFIED_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODIFIED_USER", DbType="NVarChar(50)")]
		public string MODIFIED_USER
		{
			get
			{
				return this._MODIFIED_USER;
			}
			set
			{
				if ((this._MODIFIED_USER != value))
				{
					this.OnMODIFIED_USERChanging(value);
					this.SendPropertyChanging();
					this._MODIFIED_USER = value;
					this.SendPropertyChanged("MODIFIED_USER");
					this.OnMODIFIED_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCTOR_SCHEDULE", Storage="_DOCTOR", ThisKey="DOCTOR_ID", OtherKey="ID", IsForeignKey=true)]
		public DOCTOR DOCTOR
		{
			get
			{
				return this._DOCTOR.Entity;
			}
			set
			{
				DOCTOR previousValue = this._DOCTOR.Entity;
				if (((previousValue != value) 
							|| (this._DOCTOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCTOR.Entity = null;
						previousValue.SCHEDULEs.Remove(this);
					}
					this._DOCTOR.Entity = value;
					if ((value != null))
					{
						value.SCHEDULEs.Add(this);
						this._DOCTOR_ID = value.ID;
					}
					else
					{
						this._DOCTOR_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DOCTOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_SCHEDULE", Storage="_LOCATION", ThisKey="LOCATION_ID", OtherKey="ID", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.SCHEDULEs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.SCHEDULEs.Add(this);
						this._LOCATION_ID = value.ID;
					}
					else
					{
						this._LOCATION_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
